var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/HttpInterceptor.html",[0,0.656,1,0.656]],["body/interfaces/HttpInterceptor.html",[0,0.492,1,0.716,2,1.562,3,1.142,4,1.142,5,0.864,6,1.562,7,1.258,8,1.661,9,2.273,10,0.928,11,1.239,12,0.658,13,1.661,14,1.661,15,1.258,16,1.731,17,1.418,18,1.317,19,1.142,20,1.562,21,2.273,22,2.273,23,2.273,24,1.029,25,1.142,26,0.105,27,0.864,28,1.258,29,1.142,30,1.958,31,2.273,32,2.273,33,2.273,34,1.661,35,1.661,36,2.273,37,2.273,38,1.142,39,1.629,40,1.258,41,0.492,42,0.864,43,1.562,44,1.661,45,2.273,46,1.142,47,1.562,48,0.061,49,0.061]],["title/classes/HttpRequestDeduplicator.html",[50,1.152,51,1.522]],["body/classes/HttpRequestDeduplicator.html",[1,0.705,3,0.848,4,0.848,5,0.642,7,0.642,10,0.572,11,1.065,12,0.488,13,1.327,14,1.327,15,1.005,16,1.744,17,0.942,18,1.065,19,0.848,24,0.572,25,0.848,26,0.106,27,0.642,28,0.642,29,0.848,30,0.848,38,0.848,39,1.52,40,1.238,41,0.366,42,0.642,44,0.848,46,1.327,48,0.049,49,0.049,50,1.005,51,1.327,52,0.848,53,1.16,54,1.816,55,1.816,56,1.849,57,1.816,58,1.816,59,1.816,60,1.816,61,1.816,62,1.816,63,1.816,64,1.816,65,1.816,66,1.327,67,1.816,68,1.816,69,1.816,70,1.816,71,1.816,72,1.816,73,1.816,74,1.816,75,1.816,76,1.816,77,1.327,78,1.16,79,1.816,80,1.816,81,1.16,82,1.16,83,1.16,84,1.16,85,1.816,86,1.816,87,1.16,88,1.816,89,1.327,90,1.16,91,1.16,92,1.16,93,1.849,94,1.16,95,1.16,96,1.849,97,1.816,98,1.16,99,1.16,100,1.16,101,1.16,102,0.848,103,1.16,104,1.635,105,1.16,106,1.16,107,2.237,108,1.16,109,1.16,110,1.16,111,1.16]],["title/dependencies.html",[112,1.294,113,1.817]],["body/dependencies.html",[26,0.099,41,0.926,48,0.093,49,0.093,113,2.148,114,2.94,115,2.94]],["title/index.html",[12,0.745,116,1.294,117,1.294]],["body/index.html",[0,0.432,1,0.783,5,0.759,7,0.759,10,1.072,11,0.869,15,1.143,17,0.869,18,1.045,24,0.783,26,0.107,27,0.759,39,1.374,40,1.374,41,0.783,48,0.056,49,0.056,50,1.143,77,1.509,89,1.003,93,1.815,102,1.815,104,1.509,118,2.963,119,0.759,120,1.509,121,1.003,122,1.372,123,1.372,124,1.372,125,1.372,126,1.372,127,2.065,128,1.372,129,2.065,130,1.372,131,1.372,132,1.372,133,1.372,134,1.372,135,2.065,136,1.372,137,2.065,138,2.065,139,1.372,140,1.003,141,1.372,142,1.372,143,1.372,144,2.065,145,1.372,146,1.372,147,1.372,148,1.372,149,1.372,150,1.372,151,1.372,152,1.372,153,1.372,154,1.372,155,1.372,156,1.372,157,1.372,158,1.372,159,1.372,160,1.372,161,1.372,162,1.003,163,1.372,164,1.372,165,1.372,166,1.003,167,1.372,168,1.372,169,1.372,170,0.869,171,0.759,172,1.003,173,1.003,174,0.759,175,0.759]],["title/license.html",[116,1.294,117,1.294,170,0.745]],["body/license.html",[26,0.066,48,0.066,49,0.066,96,1.271,162,1.271,166,1.271,170,0.732,171,1.359,172,1.271,173,1.271,174,0.962,175,0.962,176,2.846,177,1.739,178,2.455,179,1.739,180,1.739,181,1.739,182,1.739,183,1.739,184,2.455,185,3.612,186,1.739,187,1.739,188,1.739,189,2.846,190,1.739,191,2.455,192,1.739,193,1.739,194,2.455,195,1.739,196,1.739,197,1.739,198,1.739,199,1.739,200,1.739,201,1.739,202,2.455,203,1.739,204,1.739,205,1.739,206,1.739,207,1.739,208,1.739,209,1.739,210,2.455,211,2.455,212,1.739,213,1.739,214,1.739,215,1.739,216,1.739,217,1.739,218,1.739,219,1.739,220,1.739,221,1.739,222,1.739,223,1.739,224,1.739,225,1.739,226,1.739,227,1.739,228,1.739,229,1.739,230,1.739,231,1.739,232,1.739,233,1.739,234,1.739,235,1.739,236,1.739,237,1.739,238,1.739,239,1.739,240,1.739,241,1.739]],["title/modules.html",[242,2.03]],["body/modules.html",[26,0.095,48,0.095,49,0.095,242,2.216]],["title/overview.html",[243,2.03]],["body/overview.html",[0,0.926,26,0.093,48,0.093,49,0.093,52,2.148,243,2.148,244,2.94,245,2.94]],["title/properties.html",[112,1.294,246,1.817]],["body/properties.html",[10,0.777,24,0.777,26,0.104,41,0.777,48,0.084,49,0.084,119,1.365,121,1.803,140,1.803,170,1.038,171,1.365,174,1.365,175,1.365,246,1.803,247,2.467,248,2.467,249,2.467,250,2.467,251,2.467,252,2.467,253,2.467,254,2.467,255,3.101,256,2.467,257,2.467,258,2.467]],["title/miscellaneous/typealiases.html",[259,1.294,260,2.487]],["body/miscellaneous/typealiases.html",[0,0.827,1,0.603,8,1.398,10,0.603,11,1.104,12,0.805,16,1.452,17,0.805,18,1.356,24,1.099,26,0.071,28,1.657,34,1.917,35,1.398,42,1.452,48,0.071,49,0.071,56,1.398,66,2.188,119,1.868,120,2.354,259,1.398,261,1.913,262,2.994,263,2.623,264,1.913,265,1.913,266,1.913,267,2.623,268,1.913,269,1.913,270,1.913,271,1.913,272,1.913,273,1.913,274,1.913,275,2.623,276,1.913,277,2.623,278,2.623,279,1.913,280,1.913,281,1.913,282,1.913,283,1.913,284,1.913,285,1.913]]],"invertedIndex":[["",{"_index":26,"title":{},"body":{"interfaces/HttpInterceptor.html":{},"classes/HttpRequestDeduplicator.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["0.0.4",{"_index":248,"title":{},"body":{"properties.html":{}}}],["1",{"_index":245,"title":{},"body":{"overview.html":{}}}],["2",{"_index":244,"title":{},"body":{"overview.html":{}}}],["2023",{"_index":172,"title":{},"body":{"index.html":{},"license.html":{}}}],["7",{"_index":115,"title":{},"body":{"dependencies.html":{}}}],["above",{"_index":209,"title":{},"body":{"license.html":{}}}],["action",{"_index":234,"title":{},"body":{"license.html":{}}}],["add",{"_index":132,"title":{},"body":{"index.html":{}}}],["alias",{"_index":277,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["aliases",{"_index":261,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["and/or",{"_index":200,"title":{},"body":{"license.html":{}}}],["angular",{"_index":125,"title":{},"body":{"index.html":{}}}],["api",{"_index":120,"title":{},"body":{"index.html":{},"miscellaneous/typealiases.html":{}}}],["arising",{"_index":238,"title":{},"body":{"license.html":{}}}],["asapscheduler",{"_index":79,"title":{},"body":{"classes/HttpRequestDeduplicator.html":{}}}],["associated",{"_index":186,"title":{},"body":{"license.html":{}}}],["author",{"_index":258,"title":{},"body":{"properties.html":{}}}],["authors",{"_index":227,"title":{},"body":{"license.html":{}}}],["bugs",{"_index":254,"title":{},"body":{"properties.html":{}}}],["c",{"_index":177,"title":{},"body":{"license.html":{}}}],["caching",{"_index":74,"title":{},"body":{"classes/HttpRequestDeduplicator.html":{}}}],["catcherror",{"_index":134,"title":{},"body":{"index.html":{}}}],["catcherror(err",{"_index":148,"title":{},"body":{"index.html":{}}}],["chain",{"_index":34,"title":{},"body":{"interfaces/HttpInterceptor.html":{},"miscellaneous/typealiases.html":{}}}],["charge",{"_index":181,"title":{},"body":{"license.html":{}}}],["claim",{"_index":230,"title":{},"body":{"license.html":{}}}],["class",{"_index":50,"title":{"classes/HttpRequestDeduplicator.html":{}},"body":{"classes/HttpRequestDeduplicator.html":{},"index.html":{}}}],["classes",{"_index":52,"title":{},"body":{"classes/HttpRequestDeduplicator.html":{},"overview.html":{}}}],["client",{"_index":121,"title":{},"body":{"index.html":{},"properties.html":{}}}],["conditions",{"_index":208,"title":{},"body":{"license.html":{}}}],["connection",{"_index":240,"title":{},"body":{"license.html":{}}}],["console.error(err",{"_index":149,"title":{},"body":{"index.html":{}}}],["console.log(\"first",{"_index":136,"title":{},"body":{"index.html":{}}}],["console.log(\"second",{"_index":139,"title":{},"body":{"index.html":{}}}],["console.log('description",{"_index":159,"title":{},"body":{"index.html":{}}}],["console.log('id",{"_index":155,"title":{},"body":{"index.html":{}}}],["console.log('name",{"_index":157,"title":{},"body":{"index.html":{}}}],["const",{"_index":104,"title":{},"body":{"classes/HttpRequestDeduplicator.html":{},"index.html":{}}}],["contract",{"_index":235,"title":{},"body":{"license.html":{}}}],["contributions",{"_index":164,"title":{},"body":{"index.html":{}}}],["copies",{"_index":202,"title":{},"body":{"license.html":{}}}],["copy",{"_index":184,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":176,"title":{},"body":{"license.html":{}}}],["core/interceptor",{"_index":83,"title":{},"body":{"classes/HttpRequestDeduplicator.html":{}}}],["core/types",{"_index":84,"title":{},"body":{"classes/HttpRequestDeduplicator.html":{}}}],["damages",{"_index":231,"title":{},"body":{"license.html":{}}}],["data",{"_index":75,"title":{},"body":{"classes/HttpRequestDeduplicator.html":{}}}],["deal",{"_index":188,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":241,"title":{},"body":{"license.html":{}}}],["deduplicate",{"_index":54,"title":{},"body":{"classes/HttpRequestDeduplicator.html":{}}}],["deduplicated",{"_index":63,"title":{},"body":{"classes/HttpRequestDeduplicator.html":{}}}],["defined",{"_index":19,"title":{},"body":{"interfaces/HttpInterceptor.html":{},"classes/HttpRequestDeduplicator.html":{}}}],["defines",{"_index":8,"title":{},"body":{"interfaces/HttpInterceptor.html":{},"miscellaneous/typealiases.html":{}}}],["dependencies",{"_index":113,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":7,"title":{},"body":{"interfaces/HttpInterceptor.html":{},"classes/HttpRequestDeduplicator.html":{},"index.html":{}}}],["developer.mozilla.org/en",{"_index":278,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["dispatches",{"_index":267,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["distribute",{"_index":198,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":162,"title":{},"body":{"index.html":{},"license.html":{}}}],["err.message",{"_index":153,"title":{},"body":{"index.html":{}}}],["error",{"_index":150,"title":{},"body":{"index.html":{}}}],["es2015",{"_index":253,"title":{},"body":{"properties.html":{}}}],["event",{"_index":96,"title":{},"body":{"classes/HttpRequestDeduplicator.html":{},"license.html":{}}}],["events",{"_index":88,"title":{},"body":{"classes/HttpRequestDeduplicator.html":{}}}],["events.get(req",{"_index":105,"title":{},"body":{"classes/HttpRequestDeduplicator.html":{}}}],["events.insert(req",{"_index":111,"title":{},"body":{"classes/HttpRequestDeduplicator.html":{}}}],["events.remove(req",{"_index":109,"title":{},"body":{"classes/HttpRequestDeduplicator.html":{}}}],["eventually",{"_index":272,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["export",{"_index":44,"title":{},"body":{"interfaces/HttpInterceptor.html":{},"classes/HttpRequestDeduplicator.html":{}}}],["express",{"_index":218,"title":{},"body":{"license.html":{}}}],["false",{"_index":151,"title":{},"body":{"index.html":{}}}],["feel",{"_index":165,"title":{},"body":{"index.html":{}}}],["fetch",{"_index":119,"title":{},"body":{"index.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/HttpInterceptor.html":{},"classes/HttpRequestDeduplicator.html":{},"index.html":{}}}],["files",{"_index":187,"title":{},"body":{"license.html":{}}}],["final",{"_index":35,"title":{},"body":{"interfaces/HttpInterceptor.html":{},"miscellaneous/typealiases.html":{}}}],["finalize",{"_index":80,"title":{},"body":{"classes/HttpRequestDeduplicator.html":{}}}],["finished",{"_index":64,"title":{},"body":{"classes/HttpRequestDeduplicator.html":{}}}],["first",{"_index":268,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["fitness",{"_index":223,"title":{},"body":{"license.html":{}}}],["following",{"_index":207,"title":{},"body":{"license.html":{}}}],["free",{"_index":166,"title":{},"body":{"index.html":{},"license.html":{}}}],["function",{"_index":274,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["furnished",{"_index":205,"title":{},"body":{"license.html":{}}}],["get(req",{"_index":91,"title":{},"body":{"classes/HttpRequestDeduplicator.html":{}}}],["getting",{"_index":116,"title":{"index.html":{},"license.html":{}},"body":{}}],["given",{"_index":23,"title":{},"body":{"interfaces/HttpInterceptor.html":{}}}],["granted",{"_index":180,"title":{},"body":{"license.html":{}}}],["handle",{"_index":33,"title":{},"body":{"interfaces/HttpInterceptor.html":{}}}],["handles",{"_index":22,"title":{},"body":{"interfaces/HttpInterceptor.html":{}}}],["hereby",{"_index":179,"title":{},"body":{"license.html":{}}}],["holders",{"_index":228,"title":{},"body":{"license.html":{}}}],["html_url",{"_index":143,"title":{},"body":{"index.html":{}}}],["http",{"_index":10,"title":{},"body":{"interfaces/HttpInterceptor.html":{},"classes/HttpRequestDeduplicator.html":{},"index.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["http.get('https://api.github.com/repos/joseluisq/reactive",{"_index":146,"title":{},"body":{"index.html":{}}}],["http.git",{"_index":257,"title":{},"body":{"properties.html":{}}}],["http.intercept(new",{"_index":144,"title":{},"body":{"index.html":{}}}],["http/issues",{"_index":256,"title":{},"body":{"properties.html":{}}}],["httpclient",{"_index":126,"title":{},"body":{"index.html":{}}}],["httphandler",{"_index":18,"title":{},"body":{"interfaces/HttpInterceptor.html":{},"classes/HttpRequestDeduplicator.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["httpinterceptor",{"_index":1,"title":{"interfaces/HttpInterceptor.html":{}},"body":{"interfaces/HttpInterceptor.html":{},"classes/HttpRequestDeduplicator.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["httpoptions",{"_index":263,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["httprequest",{"_index":16,"title":{},"body":{"interfaces/HttpInterceptor.html":{},"classes/HttpRequestDeduplicator.html":{},"miscellaneous/typealiases.html":{}}}],["httprequestdeduplicator",{"_index":51,"title":{"classes/HttpRequestDeduplicator.html":{}},"body":{"classes/HttpRequestDeduplicator.html":{}}}],["httpresponse",{"_index":42,"title":{},"body":{"interfaces/HttpInterceptor.html":{},"classes/HttpRequestDeduplicator.html":{},"miscellaneous/typealiases.html":{}}}],["https://github.com/joseluisq/reactive",{"_index":255,"title":{},"body":{"properties.html":{}}}],["httpusage",{"_index":133,"title":{},"body":{"index.html":{}}}],["id",{"_index":141,"title":{},"body":{"index.html":{}}}],["identical",{"_index":55,"title":{},"body":{"classes/HttpRequestDeduplicator.html":{}}}],["identifies",{"_index":21,"title":{},"body":{"interfaces/HttpInterceptor.html":{}}}],["implementation",{"_index":9,"title":{},"body":{"interfaces/HttpInterceptor.html":{}}}],["implements",{"_index":77,"title":{},"body":{"classes/HttpRequestDeduplicator.html":{},"index.html":{}}}],["implied",{"_index":219,"title":{},"body":{"license.html":{}}}],["import",{"_index":40,"title":{},"body":{"interfaces/HttpInterceptor.html":{},"classes/HttpRequestDeduplicator.html":{},"index.html":{}}}],["included",{"_index":212,"title":{},"body":{"license.html":{}}}],["including",{"_index":191,"title":{},"body":{"license.html":{}}}],["index",{"_index":12,"title":{"index.html":{}},"body":{"interfaces/HttpInterceptor.html":{},"classes/HttpRequestDeduplicator.html":{},"miscellaneous/typealiases.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/HttpInterceptor.html":{},"classes/HttpRequestDeduplicator.html":{}}}],["insert(req",{"_index":95,"title":{},"body":{"classes/HttpRequestDeduplicator.html":{}}}],["inspired",{"_index":124,"title":{},"body":{"index.html":{}}}],["install",{"_index":127,"title":{},"body":{"index.html":{}}}],["instance",{"_index":266,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["instead",{"_index":73,"title":{},"body":{"classes/HttpRequestDeduplicator.html":{}}}],["intercept",{"_index":14,"title":{},"body":{"interfaces/HttpInterceptor.html":{},"classes/HttpRequestDeduplicator.html":{}}}],["intercept(req",{"_index":15,"title":{},"body":{"interfaces/HttpInterceptor.html":{},"classes/HttpRequestDeduplicator.html":{},"index.html":{}}}],["interceptor",{"_index":11,"title":{},"body":{"interfaces/HttpInterceptor.html":{},"classes/HttpRequestDeduplicator.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["interceptor1",{"_index":135,"title":{},"body":{"index.html":{}}}],["interceptor2",{"_index":138,"title":{},"body":{"index.html":{}}}],["interceptorfn",{"_index":47,"title":{},"body":{"interfaces/HttpInterceptor.html":{}}}],["interceptors",{"_index":36,"title":{},"body":{"interfaces/HttpInterceptor.html":{}}}],["interface",{"_index":0,"title":{"interfaces/HttpInterceptor.html":{}},"body":{"interfaces/HttpInterceptor.html":{},"index.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/HttpInterceptor.html":{}}}],["internal",{"_index":46,"title":{},"body":{"interfaces/HttpInterceptor.html":{},"classes/HttpRequestDeduplicator.html":{}}}],["issue",{"_index":169,"title":{},"body":{"index.html":{}}}],["jose",{"_index":174,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["keeps",{"_index":68,"title":{},"body":{"classes/HttpRequestDeduplicator.html":{}}}],["key(req",{"_index":101,"title":{},"body":{"classes/HttpRequestDeduplicator.html":{}}}],["keywords",{"_index":249,"title":{},"body":{"properties.html":{}}}],["kind",{"_index":217,"title":{},"body":{"license.html":{}}}],["liability",{"_index":232,"title":{},"body":{"license.html":{}}}],["liable",{"_index":229,"title":{},"body":{"license.html":{}}}],["license",{"_index":170,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["limitation",{"_index":192,"title":{},"body":{"license.html":{}}}],["limited",{"_index":220,"title":{},"body":{"license.html":{}}}],["map",{"_index":90,"title":{},"body":{"classes/HttpRequestDeduplicator.html":{}}}],["matching",{"_index":49,"title":{},"body":{"interfaces/HttpInterceptor.html":{},"classes/HttpRequestDeduplicator.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["meaning",{"_index":60,"title":{},"body":{"classes/HttpRequestDeduplicator.html":{}}}],["memory",{"_index":72,"title":{},"body":{"classes/HttpRequestDeduplicator.html":{}}}],["merchantability",{"_index":222,"title":{},"body":{"license.html":{}}}],["merge",{"_index":196,"title":{},"body":{"license.html":{}}}],["message",{"_index":152,"title":{},"body":{"index.html":{}}}],["method",{"_index":285,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["methods",{"_index":13,"title":{},"body":{"interfaces/HttpInterceptor.html":{},"classes/HttpRequestDeduplicator.html":{}}}],["miscellaneous",{"_index":259,"title":{"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/typealiases.html":{}}}],["mit",{"_index":171,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["modify",{"_index":195,"title":{},"body":{"license.html":{}}}],["modules",{"_index":242,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["name",{"_index":27,"title":{},"body":{"interfaces/HttpInterceptor.html":{},"classes/HttpRequestDeduplicator.html":{},"index.html":{}}}],["new",{"_index":89,"title":{},"body":{"classes/HttpRequestDeduplicator.html":{},"index.html":{}}}],["next",{"_index":17,"title":{},"body":{"interfaces/HttpInterceptor.html":{},"classes/HttpRequestDeduplicator.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["next(req",{"_index":137,"title":{},"body":{"index.html":{}}}],["next(req).pipe",{"_index":108,"title":{},"body":{"classes/HttpRequestDeduplicator.html":{}}}],["noninfringement",{"_index":226,"title":{},"body":{"license.html":{}}}],["note",{"_index":67,"title":{},"body":{"classes/HttpRequestDeduplicator.html":{}}}],["notice",{"_index":210,"title":{},"body":{"license.html":{}}}],["notified",{"_index":62,"title":{},"body":{"classes/HttpRequestDeduplicator.html":{}}}],["npm",{"_index":128,"title":{},"body":{"index.html":{}}}],["number",{"_index":142,"title":{},"body":{"index.html":{}}}],["ob",{"_index":145,"title":{},"body":{"index.html":{}}}],["ob$.subscribe(resp",{"_index":154,"title":{},"body":{"index.html":{}}}],["object",{"_index":32,"title":{},"body":{"interfaces/HttpInterceptor.html":{}}}],["observable",{"_index":39,"title":{},"body":{"interfaces/HttpInterceptor.html":{},"classes/HttpRequestDeduplicator.html":{},"index.html":{}}}],["observables",{"_index":123,"title":{},"body":{"index.html":{}}}],["obtaining",{"_index":183,"title":{},"body":{"license.html":{}}}],["occurrences",{"_index":71,"title":{},"body":{"classes/HttpRequestDeduplicator.html":{}}}],["oder",{"_index":57,"title":{},"body":{"classes/HttpRequestDeduplicator.html":{}}}],["once",{"_index":59,"title":{},"body":{"classes/HttpRequestDeduplicator.html":{}}}],["one",{"_index":270,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["optional",{"_index":29,"title":{},"body":{"interfaces/HttpInterceptor.html":{},"classes/HttpRequestDeduplicator.html":{}}}],["options",{"_index":284,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["otherwise",{"_index":237,"title":{},"body":{"license.html":{}}}],["out",{"_index":239,"title":{},"body":{"license.html":{}}}],["outgoing",{"_index":31,"title":{},"body":{"interfaces/HttpInterceptor.html":{}}}],["over",{"_index":122,"title":{},"body":{"index.html":{}}}],["overview",{"_index":243,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":112,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":163,"title":{},"body":{"index.html":{}}}],["param",{"_index":45,"title":{},"body":{"interfaces/HttpInterceptor.html":{}}}],["parameter",{"_index":273,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["parameters",{"_index":25,"title":{},"body":{"interfaces/HttpInterceptor.html":{},"classes/HttpRequestDeduplicator.html":{}}}],["particular",{"_index":224,"title":{},"body":{"license.html":{}}}],["peer",{"_index":114,"title":{},"body":{"dependencies.html":{}}}],["performed",{"_index":58,"title":{},"body":{"classes/HttpRequestDeduplicator.html":{}}}],["permission",{"_index":178,"title":{},"body":{"license.html":{}}}],["permit",{"_index":203,"title":{},"body":{"license.html":{}}}],["person",{"_index":182,"title":{},"body":{"license.html":{}}}],["persons",{"_index":204,"title":{},"body":{"license.html":{}}}],["pipe",{"_index":147,"title":{},"body":{"index.html":{}}}],["portions",{"_index":214,"title":{},"body":{"license.html":{}}}],["present",{"_index":173,"title":{},"body":{"index.html":{},"license.html":{}}}],["private",{"_index":86,"title":{},"body":{"classes/HttpRequestDeduplicator.html":{}}}],["properties",{"_index":246,"title":{"properties.html":{}},"body":{"properties.html":{}}}],["provided",{"_index":215,"title":{},"body":{"license.html":{}}}],["publish",{"_index":197,"title":{},"body":{"license.html":{}}}],["pull",{"_index":168,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":225,"title":{},"body":{"license.html":{}}}],["quintana",{"_index":175,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["reaching",{"_index":271,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["reactive",{"_index":118,"title":{},"body":{"index.html":{}}}],["reactivex",{"_index":251,"title":{},"body":{"properties.html":{}}}],["readonly",{"_index":87,"title":{},"body":{"classes/HttpRequestDeduplicator.html":{}}}],["remain",{"_index":37,"title":{},"body":{"interfaces/HttpInterceptor.html":{}}}],["remove(req",{"_index":99,"title":{},"body":{"classes/HttpRequestDeduplicator.html":{}}}],["repository",{"_index":140,"title":{},"body":{"index.html":{},"properties.html":{}}}],["represents",{"_index":275,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["req",{"_index":30,"title":{},"body":{"interfaces/HttpInterceptor.html":{},"classes/HttpRequestDeduplicator.html":{}}}],["req.url",{"_index":103,"title":{},"body":{"classes/HttpRequestDeduplicator.html":{}}}],["request",{"_index":24,"title":{},"body":{"interfaces/HttpInterceptor.html":{},"classes/HttpRequestDeduplicator.html":{},"index.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["requesteventmap",{"_index":85,"title":{},"body":{"classes/HttpRequestDeduplicator.html":{}}}],["requesthttps",{"_index":280,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["requests",{"_index":56,"title":{},"body":{"classes/HttpRequestDeduplicator.html":{},"miscellaneous/typealiases.html":{}}}],["resource",{"_index":276,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["resp.description",{"_index":160,"title":{},"body":{"index.html":{}}}],["resp.id",{"_index":156,"title":{},"body":{"index.html":{}}}],["resp.name",{"_index":158,"title":{},"body":{"index.html":{}}}],["response",{"_index":66,"title":{},"body":{"classes/HttpRequestDeduplicator.html":{},"miscellaneous/typealiases.html":{}}}],["responsehttps",{"_index":282,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["restriction",{"_index":190,"title":{},"body":{"license.html":{}}}],["results",{"_index":48,"title":{},"body":{"interfaces/HttpInterceptor.html":{},"classes/HttpRequestDeduplicator.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["return",{"_index":93,"title":{},"body":{"classes/HttpRequestDeduplicator.html":{},"index.html":{}}}],["returns",{"_index":38,"title":{},"body":{"interfaces/HttpInterceptor.html":{},"classes/HttpRequestDeduplicator.html":{}}}],["reusing",{"_index":65,"title":{},"body":{"classes/HttpRequestDeduplicator.html":{}}}],["rights",{"_index":193,"title":{},"body":{"license.html":{}}}],["rx",{"_index":250,"title":{},"body":{"properties.html":{}}}],["rxjs",{"_index":41,"title":{},"body":{"interfaces/HttpInterceptor.html":{},"classes/HttpRequestDeduplicator.html":{},"dependencies.html":{},"index.html":{},"properties.html":{}}}],["rxjs@^7",{"_index":129,"title":{},"body":{"index.html":{}}}],["save",{"_index":130,"title":{},"body":{"index.html":{}}}],["scheduled",{"_index":81,"title":{},"body":{"classes/HttpRequestDeduplicator.html":{}}}],["scheduled(event",{"_index":106,"title":{},"body":{"classes/HttpRequestDeduplicator.html":{}}}],["second",{"_index":269,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["see",{"_index":161,"title":{},"body":{"index.html":{}}}],["sell",{"_index":201,"title":{},"body":{"license.html":{}}}],["send",{"_index":167,"title":{},"body":{"index.html":{}}}],["shall",{"_index":211,"title":{},"body":{"license.html":{}}}],["shared",{"_index":107,"title":{},"body":{"classes/HttpRequestDeduplicator.html":{}}}],["sharereplay",{"_index":82,"title":{},"body":{"classes/HttpRequestDeduplicator.html":{}}}],["sharereplay(1",{"_index":110,"title":{},"body":{"classes/HttpRequestDeduplicator.html":{}}}],["software",{"_index":185,"title":{},"body":{"license.html":{}}}],["sort",{"_index":76,"title":{},"body":{"classes/HttpRequestDeduplicator.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/HttpInterceptor.html":{},"classes/HttpRequestDeduplicator.html":{}}}],["src/.../options.ts",{"_index":264,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../types.ts",{"_index":262,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/core/interceptor.ts",{"_index":6,"title":{},"body":{"interfaces/HttpInterceptor.html":{}}}],["src/core/interceptor.ts:13",{"_index":20,"title":{},"body":{"interfaces/HttpInterceptor.html":{}}}],["src/core/options.ts",{"_index":283,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/core/types.ts",{"_index":265,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/interceptors/deduplicator.ts",{"_index":53,"title":{},"body":{"classes/HttpRequestDeduplicator.html":{}}}],["src/interceptors/deduplicator.ts:45",{"_index":78,"title":{},"body":{"classes/HttpRequestDeduplicator.html":{}}}],["started",{"_index":117,"title":{"index.html":{},"license.html":{}},"body":{}}],["string",{"_index":102,"title":{},"body":{"classes/HttpRequestDeduplicator.html":{},"index.html":{}}}],["subject",{"_index":206,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":199,"title":{},"body":{"license.html":{}}}],["subscribers",{"_index":61,"title":{},"body":{"classes/HttpRequestDeduplicator.html":{}}}],["substantial",{"_index":213,"title":{},"body":{"license.html":{}}}],["this.events.delete(this.key(req",{"_index":100,"title":{},"body":{"classes/HttpRequestDeduplicator.html":{}}}],["this.events.get(this.key(req",{"_index":94,"title":{},"body":{"classes/HttpRequestDeduplicator.html":{}}}],["this.events.set(this.key(req",{"_index":98,"title":{},"body":{"classes/HttpRequestDeduplicator.html":{}}}],["tort",{"_index":236,"title":{},"body":{"license.html":{}}}],["track",{"_index":69,"title":{},"body":{"classes/HttpRequestDeduplicator.html":{}}}],["type",{"_index":28,"title":{},"body":{"interfaces/HttpInterceptor.html":{},"classes/HttpRequestDeduplicator.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":260,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":43,"title":{},"body":{"interfaces/HttpInterceptor.html":{}}}],["undefined",{"_index":92,"title":{},"body":{"classes/HttpRequestDeduplicator.html":{}}}],["url",{"_index":70,"title":{},"body":{"classes/HttpRequestDeduplicator.html":{}}}],["us/docs/web/api/request",{"_index":279,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["us/docs/web/api/response",{"_index":281,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["use",{"_index":194,"title":{},"body":{"license.html":{}}}],["version",{"_index":247,"title":{},"body":{"properties.html":{}}}],["void",{"_index":97,"title":{},"body":{"classes/HttpRequestDeduplicator.html":{}}}],["warranties",{"_index":221,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":216,"title":{},"body":{"license.html":{}}}],["whether",{"_index":233,"title":{},"body":{"license.html":{}}}],["without",{"_index":189,"title":{},"body":{"license.html":{}}}],["xhr",{"_index":252,"title":{},"body":{"properties.html":{}}}],["yarn",{"_index":131,"title":{},"body":{"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/HttpInterceptor.html":{"url":"interfaces/HttpInterceptor.html","title":"interface - HttpInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HttpInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                It defines an implementation of an HTTP interceptor.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        intercept\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/core/interceptor.ts:13\n                \n            \n\n\n            \n                \n                    It identifies and handles a given HTTP request.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The outgoing request object to handle.\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The next interceptor in the chain or the final request if no interceptors remain.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs'\n\nimport { HttpHandler, HttpRequest, HttpResponse } from './types'\n\n/** It defines an implementation of an HTTP interceptor. */\nexport interface HttpInterceptor {\n    /**\n     * It identifies and handles a given HTTP request.\n     *\n     * @param req The outgoing request object to handle.\n     * @param next The next interceptor in the chain or the final request if no interceptors remain.\n     */\n    intercept(req: HttpRequest, next: HttpHandler): Observable\n}\n\n/** @internal */\nexport type InterceptorFn = (\n    req: HttpRequest,\n    next: HttpHandler\n) => Observable\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpRequestDeduplicator.html":{"url":"classes/HttpRequestDeduplicator.html","title":"class - HttpRequestDeduplicator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpRequestDeduplicator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interceptors/deduplicator.ts\n        \n\n\n            \n                Description\n            \n            \n                An interceptor able to deduplicate identical HTTP requests\nin oder to be performed once. Meaning that all subscribers will be notified\nwhen the deduplicated request is finished, reusing its response.\nNote that this interceptor only keeps track of URL occurrences in-memory\ninstead of caching data requests of some sort.\n\n            \n\n\n            \n                Implements\n            \n            \n                            HttpInterceptor\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/interceptors/deduplicator.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    asapScheduler,\n    finalize,\n    Observable,\n    scheduled,\n    shareReplay,\n} from 'rxjs'\n\nimport { HttpInterceptor } from '../core/interceptor'\nimport { HttpHandler, HttpRequest, HttpResponse } from '../core/types'\n\n/** @internal */\nclass RequestEventMap {\n    private readonly events = new Map>()\n\n    get(req: HttpRequest): Observable | undefined {\n        return this.events.get(this.key(req))\n    }\n\n    insert(req: HttpRequest, event: Observable): void {\n        this.events.set(this.key(req), event)\n    }\n\n    remove(req: HttpRequest): void {\n        this.events.delete(this.key(req))\n    }\n\n    private key(req: HttpRequest): string {\n        return req.url\n    }\n}\n\n/** @internal */\nconst events = new RequestEventMap()\n\n/**\n * An interceptor able to deduplicate identical HTTP requests\n * in oder to be performed once. Meaning that all subscribers will be notified\n * when the deduplicated request is finished, reusing its response.\n *\n * Note that this interceptor only keeps track of URL occurrences in-memory\n * instead of caching data requests of some sort.\n */\nexport class HttpRequestDeduplicator implements HttpInterceptor {\n    intercept(req: HttpRequest, next: HttpHandler): Observable {\n        const event = events.get(req)\n        if (event) return scheduled(event, asapScheduler)\n        const shared = next(req).pipe(\n            finalize(() => events.remove(req)),\n            shareReplay(1)\n        )\n        events.insert(req, shared)\n        return shared\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Peer dependencies\n    \n    \n        \n            rxjs : ^7\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nReactive HTTP    \n\nHTTP Fetch API client over RxJS Observables inspired by Angular HttpClient.\n\nInstall\nnpm install rxjs@^7 reactive-http --save\n# or\nyarn add rxjs@^7 reactive-httpUsage\n// import { catchError, of } from 'rxjs'\nimport { Observable } from 'rxjs'\nimport { Http, HttpHandler, HttpInterceptor } from 'reactive-http'\n\nclass Interceptor1 implements HttpInterceptor {\n    intercept(req: Request, next: HttpHandler): Observable {\n        console.log(\"first interceptor!\")\n        return next(req)\n    }\n}\n\nclass Interceptor2 implements HttpInterceptor {\n    intercept(req: Request, next: HttpHandler): Observable {\n        console.log(\"second interceptor!\")\n        return next(req)\n    }\n}\n\ninterface Repository {\n    id: number,\n    name: string,\n    description: string,\n    html_url: string,\n}\n\nconst http = new Http()\nhttp.intercept(new Interceptor1())\nhttp.intercept(new Interceptor2())\n\nconst ob$ = http.get('https://api.github.com/repos/joseluisq/reactive-http')\n// .pipe(\n//     catchError(err => {\n//         console.error(err)\n//         return of({ error: false, message: err.message })\n//     })\n// )\n\nob$.subscribe(resp => {\n    console.log('id:', resp.id)\n    console.log('name:', resp.name)\n    console.log('description:', resp.description)\n})API\nSee reactive-http documentation page.\nContributions\nFeel free to send a Pull request or file an issue.\nLicense\nMIT license\n© 2023-present Jose Quintana\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nThe MIT License (MIT)\nCopyright (c) 2023-present Jose Quintana \nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.4\n        \n            Keywords : fetch, http, request, Rx, RxJS, ReactiveX, client, xhr, ES2015\n        \n            Bugs : https://github.com/joseluisq/reactive-http/issues\n        \n            License : MIT\n        \n            Repository : https://github.com/joseluisq/reactive-http.git\n        \n            Author : Jose Quintana\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            HttpHandler   (src/.../types.ts)\n                        \n                        \n                            HttpOptions   (src/.../options.ts)\n                        \n                        \n                            HttpRequest   (src/.../types.ts)\n                        \n                        \n                            HttpResponse   (src/.../types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/core/types.ts\n    \n    \n        \n            \n                \n                    \n                    HttpHandler\n                \n            \n            \n                \n                    An HttpHandler instance dispatches requests\nto the first interceptor in the chain, which dispatches then\nto the second one and so on reaching the final fetch request eventually.\nIn an HttpInterceptor, the HttpHandler parameter is the next interceptor in the chain.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    HttpRequest\n                \n            \n            \n                \n                    The Request interface of the Fetch API represents a resource request.\nType alias of the Fetch API ://developer.mozilla.org/en-US/docs/Web/API/Request Requesthttps.\n\n                \n            \n            \n                \n                        Request\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    HttpResponse\n                \n            \n            \n                \n                    The Response interface of the Fetch API represents the response to a request.\nType alias of the Fetch API ://developer.mozilla.org/en-US/docs/Web/API/Response Responsehttps.\n\n                \n            \n            \n                \n                        Response\n\n                \n            \n        \n    \n    src/core/options.ts\n    \n    \n        \n            \n                \n                    \n                    HttpOptions\n                \n            \n            \n                \n                    It defines options for an HTTP request method.\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
